{"version":3,"sources":["game-ui.js"],"names":["cc","Class","extends","Component","properties","cardnode_prefab","default","type","Prefab","total_rate_label","Label","look_card_button","Button","rate_1_button","rate_2_button","rate_5_button","pk_button","onLoad","node","active","gameEventListener","on","pushCard","bind","showCard","playerChooseRate","turnPlayerMessage","data","console","log","JSON","stringify","uid","currentMaxRate","maxRate","playerData","enableButton","disabelButton","setButtonActive","value","interactable","rateList","i","length","totalRate","string","cardNodeList","cardNode","instantiate","parent","position","x","y","push","cardData","getComponent","onDestroy","off"],"mappings":"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","file":"game-ui.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["import global from './global'\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        cardnode_prefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        total_rate_label: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        look_card_button: {\r\n            default: null,\r\n            type: cc.Button\r\n        },\r\n        rate_1_button: {\r\n            default: null,\r\n            type: cc.Button\r\n        },\r\n        rate_2_button: {\r\n            default: null,\r\n            type: cc.Button\r\n        },\r\n        rate_5_button: {\r\n            default: null,\r\n            type: cc.Button\r\n        },\r\n        pk_button: {\r\n            default: null,\r\n            type: cc.Button\r\n        }\r\n\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n      this.node.active = false;\r\n      global.gameEventListener.on(\"push_card\", this.pushCard.bind(this));\r\n      global.gameEventListener.on(\"show_card\", this.showCard.bind(this));\r\n      global.gameEventListener.on(\"player_choose_rate\",this.playerChooseRate.bind(this));\r\n      global.gameEventListener.on(\"turn_player_message\", this.turnPlayerMessage.bind(this));\r\n       // this.disabelButton();\r\n    },\r\n    turnPlayerMessage: function (data) {\r\n        console.log(\"turn player message\" + JSON.stringify(data));\r\n        let uid = data.uid;\r\n        // let maxRate = data.maxRate;\r\n        this.currentMaxRate = data.maxRate;\r\n        if (uid === global.playerData.uid){\r\n            this.enableButton();\r\n        }else {\r\n            this.disabelButton();\r\n        }\r\n    }\r\n    ,\r\n    enableButton: function () {\r\n        this.setButtonActive(true);\r\n    },\r\n    disabelButton: function () {\r\n        this.setButtonActive(false);\r\n    },\r\n    setButtonActive: function (value) {\r\n        console.log(\"set button \" + value);\r\n        if (value === false){\r\n            this.rate_1_button.interactable = value;\r\n            this.rate_2_button.interactable = value;\r\n            this.rate_5_button.interactable = value;\r\n        }else {\r\n            var rateList = [1, 2 ,5];\r\n\r\n            for (let i = 0 ; i < rateList.length ; i ++){\r\n                if (this.currentMaxRate <= rateList[i]){\r\n                    this[\"rate_\" + rateList[i] + \"_button\"].interactable  = value;\r\n                }else {\r\n                    this[\"rate_\" + rateList[i] + \"_button\"].interactable = false;\r\n                }\r\n            }\r\n        }\r\n        this.pk_button.interactable = value;\r\n\r\n\r\n    },\r\n    playerChooseRate: function (data) {\r\n        var totalRate = data.totalRate;\r\n        this.total_rate_label.string = totalRate + \"\";\r\n    },\r\n    pushCard: function () {\r\n      //\r\n        this.node.active = true;\r\n        this.cardNodeList = [];\r\n        console.log(\"recive event push card\");\r\n        for (var i = 0 ; i < 3 ; i ++){\r\n            var cardNode =  cc.instantiate(this.cardnode_prefab);\r\n            cardNode.parent = this.node;\r\n            cardNode.position = {\r\n                x: 100 * (3 - 1) * - 0.5 + 100 * i,\r\n                y: 0\r\n            };\r\n            this.cardNodeList.push(cardNode);\r\n        }\r\n\r\n    },\r\n    showCard: function (data) {\r\n        console.log(\"data = \" + JSON.stringify(data));\r\n        for (var i = 0 ; i < data.length ; i ++){\r\n            var cardData = data[i];\r\n            var cardNode = this.cardNodeList[i];\r\n            cardNode.getComponent(\"card-node\").showCard(cardData);\r\n        }\r\n        this.look_card_button.interactable = false;\r\n    },\r\n    onDestroy: function () {\r\n        global.gameEventListener.off(\"push_card\", this.pushCard);\r\n    }\r\n\r\n\r\n});\r\n"]}