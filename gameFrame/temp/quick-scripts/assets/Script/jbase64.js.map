{"version":3,"sources":["jbase64.js"],"names":["chars","lookup","Uint8Array","i","length","charCodeAt","__BASE64","decoder","base64","bufferLength","len","p","encoded1","encoded2","encoded3","encoded4","arraybuffer","ArrayBuffer","bytes","encoder","substring","window","BASE64","Bytes2Str","arr","str","_arr","one","toString","v","match","bytesLength","store","slice","st","String","fromCharCode","parseInt"],"mappings":"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","file":"jbase64.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["/*\r\n * base64-arraybuffer\r\n * https://github.com/niklasvh/base64-arraybuffer\r\n *\r\n * Copyright (c) 2012 Niklas von Hertzen\r\n * Licensed under the MIT license.\r\n */\r\n(function(){\r\n    \"use strict\";\r\n\r\n    var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\";\r\n\r\n    // Use a lookup table to find the index.\r\n    var lookup = new Uint8Array(256);\r\n    for (var i = 0; i < chars.length; i++) {\r\n        lookup[chars.charCodeAt(i)] = i;\r\n    }\r\n\r\n    var __BASE64 = {\r\n        /**\r\n         *BASE64 Encode\r\n         */\r\n        decoder:function(base64){\r\n            var bufferLength = base64.length * 0.75,\r\n                len = base64.length, i, p = 0,\r\n                encoded1, encoded2, encoded3, encoded4;\r\n\r\n            if (base64[base64.length - 1] === \"=\") {\r\n                bufferLength--;\r\n                if (base64[base64.length - 2] === \"=\") {\r\n                    bufferLength--;\r\n                }\r\n            }\r\n\r\n            var arraybuffer = new ArrayBuffer(bufferLength),\r\n                bytes = new Uint8Array(arraybuffer);\r\n\r\n            for (i = 0; i < len; i+=4) {\r\n                encoded1 = lookup[base64.charCodeAt(i)];\r\n                encoded2 = lookup[base64.charCodeAt(i+1)];\r\n                encoded3 = lookup[base64.charCodeAt(i+2)];\r\n                encoded4 = lookup[base64.charCodeAt(i+3)];\r\n\r\n                bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\r\n                bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\r\n                bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\r\n            }\r\n\r\n            return arraybuffer;\r\n        },\r\n        /**\r\n         *BASE64  Decode for UTF-8\r\n         */\r\n        encoder : function(arraybuffer) {\r\n            var bytes = new Uint8Array(arraybuffer),\r\n                i, len = bytes.length, base64 = \"\";\r\n\r\n            for (i = 0; i < len; i += 3) {\r\n                base64 += chars[bytes[i] >> 2];\r\n                base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\r\n                base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\r\n                base64 += chars[bytes[i + 2] & 63];\r\n            }\r\n\r\n            if ((len % 3) === 2) {\r\n                base64 = base64.substring(0, base64.length - 1) + \"=\";\r\n            } else if (len % 3 === 1) {\r\n                base64 = base64.substring(0, base64.length - 2) + \"==\";\r\n            }\r\n\r\n            return base64;\r\n        }\r\n    };\r\n\r\n    window.BASE64 = __BASE64;\r\n})();\r\n\r\nvar Bytes2Str = function(arr) {\r\n    if(typeof arr === 'string') {\r\n        return arr;\r\n    }\r\n    var str = '',\r\n        _arr = arr;\r\n    for(var i = 0; i < _arr.length; i++) {\r\n        var one = _arr[i].toString(2),\r\n            v = one.match(/^1+?(?=0)/);\r\n        if(v && one.length == 8) {\r\n            var bytesLength = v[0].length;\r\n            var store = _arr[i].toString(2).slice(7 - bytesLength);\r\n            for(var st = 1; st < bytesLength; st++) {\r\n                store += _arr[st + i].toString(2).slice(2);\r\n            }\r\n            str += String.fromCharCode(parseInt(store, 2));\r\n            i += bytesLength - 1;\r\n        } else {\r\n            str += String.fromCharCode(_arr[i]);\r\n        }\r\n    }\r\n    return str;\r\n}\r\nwindow.Bytes2Str = Bytes2Str;"]}